{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "ai-builder-hero",
  "type": "registry:block",
  "title": "AI Builder Hero",
  "description": "A hero section designed for AI builder applications",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority",
    "@radix-ui/react-popover",
    "lucide-react",
    "@radix-ui/react-dropdown-menu",
    "@radix-ui/react-tooltip",
    "react-textarea-autosize",
    "@radix-ui/react-toggle",
    "@radix-ui/react-select",
    "motion"
  ],
  "files": [
    {
      "path": "registry/default/blocks/hero-sections/ai-builder-hero/hero.tsx",
      "content": "'use client'\n\nimport Line from '@/registry/default/blocks/hero-sections/ai-builder-hero/line'\nimport Header from '@/registry/default/blocks/hero-sections/ai-builder-hero/header'\nimport PromptInput02 from '@/registry/default/components/input/prompt-input-02'\nimport { motion as m } from 'motion/react'\n\nconst quickPrompts = [\n    {\n        label: 'Logo',\n        value: 'Generate a logo for a tech startup',\n    },\n    {\n        label: 'Poster',\n        value: 'Create a poster for an upcoming event',\n    },\n    {\n        label: 'Business Card',\n        value: 'Design a business card for a freelance designer',\n    },\n    {\n        label: 'Landing Page',\n        value: 'Design a landing page for a new product launch',\n    },\n]\n\nconst staggerDelay = 0.2\nconst initialDelay = 0.2 // initial delay before the first element animates\n\nconst variants = {\n    hidden: () => ({\n        opacity: 0,\n        filter: 'blur(10px)',\n        transform: 'scale(0.95)',\n    }),\n    visible: (custom: number) => ({\n        opacity: 1,\n        transform: 'scale(1)',\n        filter: 'blur(0)',\n        transition: {\n            delay: custom * staggerDelay + initialDelay,\n            duration: 0.4,\n            ease: 'easeInOut',\n        },\n    }),\n}\n\nexport default function Hero() {\n    return (\n        <div className=\"flex min-h-svh w-full flex-col\">\n            {/* header */}\n            <Header />\n\n            {/* hero section */}\n            <section className=\"flex h-full flex-1 flex-col items-center justify-center border-x\">\n                <div className=\"container-line-wrapper h-36\" />\n                <Line />\n                <h1 className=\"container-line-wrapper px-4 py-6 text-center text-3xl font-bold md:text-5xl\">\n                    <m.span\n                        initial=\"hidden\"\n                        animate=\"visible\"\n                        custom={0}\n                        variants={variants}\n                    >\n                        Create\n                    </m.span>{' '}\n                    <m.span\n                        initial=\"hidden\"\n                        animate=\"visible\"\n                        custom={1}\n                        variants={variants}\n                    >\n                        Stunning\n                    </m.span>{' '}\n                    <m.span\n                        initial=\"hidden\"\n                        animate=\"visible\"\n                        custom={2}\n                        variants={variants}\n                    >\n                        Visuals\n                    </m.span>\n                </h1>\n                <Line />\n                <div className=\"container-line-wrapper bg-muted/70 flex w-full flex-col items-center justify-center p-4\">\n                    <m.div\n                        initial=\"hidden\"\n                        animate=\"visible\"\n                        custom={3}\n                        variants={variants}\n                        className=\"w-full\"\n                    >\n                        <PromptInput02 quickPrompts={quickPrompts} />\n                    </m.div>\n                </div>\n                <Line />\n                <StarterTemplate />\n            </section>\n        </div>\n    )\n}\n\nfunction StarterTemplate() {\n    return (\n        <div className=\"container-line-wrapper flex-1 p-4 xl:px-6\">\n            <m.h2\n                initial=\"hidden\"\n                animate=\"visible\"\n                custom={4}\n                variants={variants}\n                className=\"font-semibold\"\n            >\n                Browse Templates\n            </m.h2>\n\n            <div className=\"mt-4 grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3\">\n                {templates.map((template, index) => (\n                    <m.button\n                        initial=\"hidden\"\n                        animate=\"visible\"\n                        custom={5 + index}\n                        variants={variants}\n                        key={template.title}\n                        className=\"border-border bg-card hover:bg-card/50 flex flex-col items-start rounded-lg border p-4 transition-all\"\n                    >\n                        <template.icon className=\"size-6\" />\n                        <h3 className=\"mt-3 text-left text-sm font-medium\">\n                            {template.title}\n                        </h3>\n                        <p className=\"text-muted-foreground mt-1 text-left text-sm\">\n                            {template.description}\n                        </p>\n                    </m.button>\n                ))}\n            </div>\n        </div>\n    )\n}\n\ntype IconProps = React.HTMLAttributes<SVGElement>\n\nconst templates = [\n    {\n        title: 'Next.js',\n        description: 'A React framework for production',\n        icon: (props: IconProps) => (\n            <svg\n                width=\"1em\"\n                height=\"1em\"\n                viewBox=\"0 0 180 180\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                {...props}\n            >\n                <mask\n                    id=\"mask0_408_139\"\n                    style={{\n                        maskType: 'alpha',\n                    }}\n                    maskUnits=\"userSpaceOnUse\"\n                    x={0}\n                    y={0}\n                    width={180}\n                    height={180}\n                >\n                    <circle cx={90} cy={90} r={90} fill=\"black\" />\n                </mask>\n                <g mask=\"url(#mask0_408_139)\">\n                    <circle\n                        cx={90}\n                        cy={90}\n                        r={87}\n                        fill=\"black\"\n                        stroke=\"white\"\n                        strokeWidth={6}\n                    />\n                    <path\n                        d=\"M149.508 157.52L69.142 54H54V125.97H66.1136V69.3836L139.999 164.845C143.333 162.614 146.509 160.165 149.508 157.52Z\"\n                        fill=\"url(#paint0_linear_408_139)\"\n                    />\n                    <rect\n                        x={115}\n                        y={54}\n                        width={12}\n                        height={72}\n                        fill=\"url(#paint1_linear_408_139)\"\n                    />\n                </g>\n                <defs>\n                    <linearGradient\n                        id=\"paint0_linear_408_139\"\n                        x1={109}\n                        y1={116.5}\n                        x2={144.5}\n                        y2={160.5}\n                        gradientUnits=\"userSpaceOnUse\"\n                    >\n                        <stop stopColor=\"white\" />\n                        <stop offset={1} stopColor=\"white\" stopOpacity={0} />\n                    </linearGradient>\n                    <linearGradient\n                        id=\"paint1_linear_408_139\"\n                        x1={121}\n                        y1={54}\n                        x2={120.799}\n                        y2={106.875}\n                        gradientUnits=\"userSpaceOnUse\"\n                    >\n                        <stop stopColor=\"white\" />\n                        <stop offset={1} stopColor=\"white\" stopOpacity={0} />\n                    </linearGradient>\n                </defs>\n            </svg>\n        ),\n    },\n    {\n        title: 'Supabase',\n        description: 'Open source Firebase alternative',\n        icon: (props: IconProps) => (\n            <svg\n                viewBox=\"0 0 109 113\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"1em\"\n                height=\"1em\"\n                {...props}\n            >\n                <path\n                    d=\"M63.7076 110.284C60.8481 113.885 55.0502 111.912 54.9813 107.314L53.9738 40.0627L99.1935 40.0627C107.384 40.0627 111.952 49.5228 106.859 55.9374L63.7076 110.284Z\"\n                    fill=\"url(#paint0_linear)\"\n                />\n                <path\n                    d=\"M63.7076 110.284C60.8481 113.885 55.0502 111.912 54.9813 107.314L53.9738 40.0627L99.1935 40.0627C107.384 40.0627 111.952 49.5228 106.859 55.9374L63.7076 110.284Z\"\n                    fill=\"url(#paint1_linear)\"\n                    fillOpacity={0.2}\n                />\n                <path\n                    d=\"M45.317 2.07103C48.1765 -1.53037 53.9745 0.442937 54.0434 5.041L54.4849 72.2922H9.83113C1.64038 72.2922 -2.92775 62.8321 2.1655 56.4175L45.317 2.07103Z\"\n                    fill=\"#3ECF8E\"\n                />\n                <defs>\n                    <linearGradient\n                        id=\"paint0_linear\"\n                        x1={53.9738}\n                        y1={54.974}\n                        x2={94.1635}\n                        y2={71.8295}\n                        gradientUnits=\"userSpaceOnUse\"\n                    >\n                        <stop stopColor=\"#249361\" />\n                        <stop offset={1} stopColor=\"#3ECF8E\" />\n                    </linearGradient>\n                    <linearGradient\n                        id=\"paint1_linear\"\n                        x1={36.1558}\n                        y1={30.578}\n                        x2={54.4844}\n                        y2={65.0806}\n                        gradientUnits=\"userSpaceOnUse\"\n                    >\n                        <stop />\n                        <stop offset={1} stopOpacity={0} />\n                    </linearGradient>\n                </defs>\n            </svg>\n        ),\n    },\n    {\n        title: 'Neon',\n        description: 'Serverless Postgres database',\n        icon: (props: IconProps) => (\n            <svg\n                viewBox=\"0 0 256 256\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"1em\"\n                height=\"1em\"\n                preserveAspectRatio=\"xMidYMid\"\n                {...props}\n            >\n                <defs>\n                    <linearGradient\n                        id=\"a\"\n                        x1=\"100%\"\n                        x2=\"12.069%\"\n                        y1=\"100%\"\n                        y2=\"0%\"\n                    >\n                        <stop offset=\"0%\" stopColor=\"#62F755\" />\n                        <stop\n                            offset=\"100%\"\n                            stopColor=\"#8FF986\"\n                            stopOpacity={0}\n                        />\n                    </linearGradient>\n                    <linearGradient\n                        id=\"b\"\n                        x1=\"100%\"\n                        x2=\"40.603%\"\n                        y1=\"100%\"\n                        y2=\"76.897%\"\n                    >\n                        <stop offset=\"0%\" stopOpacity={0.9} />\n                        <stop\n                            offset=\"100%\"\n                            stopColor=\"#1A1A1A\"\n                            stopOpacity={0}\n                        />\n                    </linearGradient>\n                </defs>\n                <path\n                    fill=\"#00E0D9\"\n                    d=\"M0 44.139C0 19.762 19.762 0 44.139 0H211.86C236.238 0 256 19.762 256 44.139v142.649c0 25.216-31.915 36.16-47.388 16.256l-48.392-62.251v75.484c0 21.939-17.784 39.723-39.722 39.723h-76.36C19.763 256 0 236.238 0 211.861V44.14Zm44.139-8.825c-4.879 0-8.825 3.946-8.825 8.818v167.73c0 4.878 3.946 8.831 8.818 8.831h77.688c2.44 0 3.087-1.977 3.087-4.416v-101.22c0-25.222 31.914-36.166 47.395-16.255l48.391 62.243V44.14c0-4.879.455-8.825-4.416-8.825H44.14Z\"\n                />\n                <path\n                    fill=\"url(#a)\"\n                    d=\"M0 44.139C0 19.762 19.762 0 44.139 0H211.86C236.238 0 256 19.762 256 44.139v142.649c0 25.216-31.915 36.16-47.388 16.256l-48.392-62.251v75.484c0 21.939-17.784 39.723-39.722 39.723h-76.36C19.763 256 0 236.238 0 211.861V44.14Zm44.139-8.825c-4.879 0-8.825 3.946-8.825 8.818v167.73c0 4.878 3.946 8.831 8.818 8.831h77.688c2.44 0 3.087-1.977 3.087-4.416v-101.22c0-25.222 31.914-36.166 47.395-16.255l48.391 62.243V44.14c0-4.879.455-8.825-4.416-8.825H44.14Z\"\n                />\n                <path\n                    fill=\"url(#b)\"\n                    fillOpacity={0.4}\n                    d=\"M0 44.139C0 19.762 19.762 0 44.139 0H211.86C236.238 0 256 19.762 256 44.139v142.649c0 25.216-31.915 36.16-47.388 16.256l-48.392-62.251v75.484c0 21.939-17.784 39.723-39.722 39.723h-76.36C19.763 256 0 236.238 0 211.861V44.14Zm44.139-8.825c-4.879 0-8.825 3.946-8.825 8.818v167.73c0 4.878 3.946 8.831 8.818 8.831h77.688c2.44 0 3.087-1.977 3.087-4.416v-101.22c0-25.222 31.914-36.166 47.395-16.255l48.391 62.243V44.14c0-4.879.455-8.825-4.416-8.825H44.14Z\"\n                />\n                <path\n                    fill=\"#63F655\"\n                    d=\"M211.861 0C236.238 0 256 19.762 256 44.139v142.649c0 25.216-31.915 36.16-47.388 16.256l-48.392-62.251v75.484c0 21.939-17.784 39.723-39.722 39.723a4.409 4.409 0 0 0 4.409-4.409V115.058c0-25.223 31.914-36.167 47.395-16.256l48.391 62.243V8.825c0-4.871-3.953-8.825-8.832-8.825Z\"\n                />\n            </svg>\n        ),\n    },\n    {\n        title: 'Vercel',\n        description: 'Platform for frontend frameworks and static sites',\n        icon: (props: IconProps) => (\n            <svg\n                viewBox=\"0 0 256 222\"\n                width=\"1em\"\n                height=\"1em\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                preserveAspectRatio=\"xMidYMid\"\n                {...props}\n            >\n                <path fill=\"#fff\" d=\"m128 0 128 221.705H0z\" />\n            </svg>\n        ),\n    },\n    {\n        title: 'Upstash',\n        description: 'Serverless Redis and Kafka',\n        icon: (props: IconProps) => (\n            <svg\n                viewBox=\"0 0 256 341\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"1em\"\n                height=\"1em\"\n                preserveAspectRatio=\"xMidYMid\"\n                {...props}\n            >\n                <path\n                    fill=\"#00C98D\"\n                    d=\"M0 298.417c56.554 56.553 148.247 56.553 204.801 0 56.554-56.554 56.554-148.247 0-204.801l-25.6 25.6c42.415 42.416 42.415 111.185 0 153.6-42.416 42.416-111.185 42.416-153.601 0L0 298.416Z\"\n                />\n                <path\n                    fill=\"#00C98D\"\n                    d=\"M51.2 247.216c28.277 28.277 74.123 28.277 102.4 0 28.277-28.276 28.277-74.123 0-102.4l-25.6 25.6c14.14 14.138 14.14 37.061 0 51.2-14.138 14.139-37.061 14.139-51.2 0l-25.6 25.6ZM256 42.415c-56.554-56.553-148.247-56.553-204.8 0-56.555 56.555-56.555 148.247 0 204.801l25.599-25.6c-42.415-42.415-42.415-111.185 0-153.6 42.416-42.416 111.185-42.416 153.6 0L256 42.416Z\"\n                />\n                <path\n                    fill=\"#00C98D\"\n                    d=\"M204.8 93.616c-28.276-28.277-74.124-28.277-102.4 0-28.278 28.277-28.278 74.123 0 102.4l25.6-25.6c-14.14-14.138-14.14-37.061 0-51.2 14.138-14.139 37.06-14.139 51.2 0l25.6-25.6Z\"\n                />\n                <path\n                    fill=\"#FFF\"\n                    fillOpacity={0.4}\n                    d=\"M256 42.415c-56.554-56.553-148.247-56.553-204.8 0-56.555 56.555-56.555 148.247 0 204.801l25.599-25.6c-42.415-42.415-42.415-111.185 0-153.6 42.416-42.416 111.185-42.416 153.6 0L256 42.416Z\"\n                />\n                <path\n                    fill=\"#FFF\"\n                    fillOpacity={0.4}\n                    d=\"M204.8 93.616c-28.276-28.277-74.124-28.277-102.4 0-28.278 28.277-28.278 74.123 0 102.4l25.6-25.6c-14.14-14.138-14.14-37.061 0-51.2 14.138-14.139 37.06-14.139 51.2 0l25.6-25.6Z\"\n                />\n            </svg>\n        ),\n    },\n]\n",
      "type": "registry:component",
      "target": "components/hero.tsx"
    },
    {
      "path": "registry/default/blocks/hero-sections/ai-builder-hero/header.tsx",
      "content": "'use client'\n\nimport { Button, buttonVariants } from '@/components/ui/button'\nimport { cn } from '@/lib/utils'\nimport Link, { LinkProps } from 'next/link'\nimport React from 'react'\nimport {\n    Popover,\n    PopoverContent,\n    PopoverTrigger,\n} from '@/components/ui/popover'\n\nconst navLinks = [\n    {\n        href: '#',\n        label: 'Features',\n    },\n    {\n        href: '#',\n        label: 'About',\n    },\n    {\n        href: '#',\n        label: 'Pricing',\n    },\n    {\n        href: '#',\n        label: 'Contact',\n    },\n    {\n        href: '#',\n        label: 'Teams',\n    },\n]\n\nexport default function Header() {\n    return (\n        <header className=\"bg-background sticky top-0 z-20 grid h-14 w-full grid-cols-2 gap-4 border-b px-4 md:grid-cols-5 xl:px-6\">\n            <div className=\"flex items-center justify-start gap-4\">\n                <MobileNav />\n                <Link\n                    href=\"#\"\n                    className=\"focus-visible:border-ring focus-visible:ring-ring/50 flex text-lg font-bold outline-none focus-visible:ring-[3px]\"\n                >\n                    Acme\n                </Link>\n            </div>\n\n            <nav className=\"col-span-3 hidden place-items-center md:grid\">\n                <ul className=\"flex items-center gap-2\">\n                    {navLinks.map((link) => (\n                        <li key={link.label} className=\"inline-block\">\n                            <Link\n                                href={link.href}\n                                className={cn(\n                                    buttonVariants({\n                                        variant: 'ghost',\n                                        size: 'sm',\n                                    })\n                                )}\n                            >\n                                {link.label}\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n            </nav>\n\n            <div className=\"flex items-center justify-end gap-2\">\n                <Link\n                    href=\"#\"\n                    className={cn(\n                        buttonVariants({ variant: 'ghost', size: 'sm' })\n                    )}\n                >\n                    Log in\n                </Link>\n                <Link href=\"#\" className={cn(buttonVariants({ size: 'sm' }))}>\n                    Sign up\n                </Link>\n            </div>\n        </header>\n    )\n}\n\nfunction MobileNav() {\n    const [open, setOpen] = React.useState(false)\n\n    return (\n        <Popover open={open} onOpenChange={setOpen}>\n            <PopoverTrigger asChild>\n                <Button\n                    variant=\"ghost\"\n                    className={cn(\n                        'extend-touch-target block h-8 touch-manipulation items-center justify-start gap-2.5 !p-0 hover:bg-transparent focus-visible:bg-transparent focus-visible:ring-0 active:bg-transparent md:hidden dark:hover:bg-transparent'\n                    )}\n                >\n                    <div className=\"relative flex h-8 w-4 items-center justify-center\">\n                        <div className=\"relative size-4\">\n                            <span\n                                className={cn(\n                                    'bg-foreground absolute left-0 block h-0.5 w-4 transition-all duration-100',\n                                    open ? 'top-[0.4rem] -rotate-45' : 'top-1'\n                                )}\n                            />\n                            <span\n                                className={cn(\n                                    'bg-foreground absolute left-0 block h-0.5 w-4 transition-all duration-100',\n                                    open ? 'top-[0.4rem] rotate-45' : 'top-2.5'\n                                )}\n                            />\n                        </div>\n                        <span className=\"sr-only\">Toggle Menu</span>\n                    </div>\n                </Button>\n            </PopoverTrigger>\n            <PopoverContent\n                className=\"bg-background/90 no-scrollbar h-(--radix-popover-content-available-height) w-(--radix-popover-content-available-width) overflow-y-auto rounded-none border-none p-0 shadow-none backdrop-blur duration-100\"\n                align=\"start\"\n                side=\"bottom\"\n                alignOffset={-16}\n                sideOffset={14}\n            >\n                <div className=\"flex flex-col gap-12 overflow-auto px-6 py-6\">\n                    <div className=\"flex flex-col gap-4\">\n                        <div className=\"text-muted-foreground text-sm font-medium\">\n                            Menu\n                        </div>\n                        <div className=\"flex flex-col gap-3\">\n                            {navLinks.map((item, index) => (\n                                <MobileLink\n                                    key={index}\n                                    href={item.href}\n                                    onOpenChange={setOpen}\n                                >\n                                    {item.label}\n                                </MobileLink>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </PopoverContent>\n        </Popover>\n    )\n}\n\nfunction MobileLink({\n    href,\n    onOpenChange,\n    className,\n    children,\n    ...props\n}: LinkProps & {\n    onOpenChange?: (open: boolean) => void\n    children: React.ReactNode\n    className?: string\n}) {\n    return (\n        <Link\n            href={href}\n            className={cn('text-2xl font-medium', className)}\n            {...props}\n        >\n            {children}\n        </Link>\n    )\n}\n",
      "type": "registry:component",
      "target": "components/header.tsx"
    },
    {
      "path": "registry/default/blocks/hero-sections/ai-builder-hero/line.tsx",
      "content": "import { cn } from '@/lib/utils'\n\nexport default function Line({\n    className,\n    ...props\n}: React.ComponentProps<'div'>) {\n    return (\n        <span\n            className={cn('border-border relative w-full border-t', className)}\n            {...props}\n        />\n    )\n}\n",
      "type": "registry:ui",
      "target": "components/ui/line.tsx"
    },
    {
      "path": "registry/default/components/input/prompt-input-02.tsx",
      "content": "'use client'\n\nimport { Button } from '@/components/ui/button'\nimport { cn } from '@/lib/utils'\nimport {\n    CloudUploadIcon,\n    CornerLeftUpIcon,\n    GlobeIcon,\n    LightbulbIcon,\n    PaperclipIcon,\n} from 'lucide-react'\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuSeparator,\n    DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu'\nimport {\n    Tooltip,\n    TooltipContent,\n    TooltipProvider,\n    TooltipTrigger,\n} from '@/components/ui/tooltip'\nimport React from 'react'\nimport TextareaAutosize from 'react-textarea-autosize'\nimport { Toggle } from '@/components/ui/toggle'\nimport {\n    Select,\n    SelectContent,\n    SelectGroup,\n    SelectItem,\n    SelectTrigger,\n    SelectValue,\n} from '@/components/ui/select'\n\nconst models = [\n    'GPT-4.5',\n    'Claude 3.7 Sonnet',\n    'Gemini 2.0 Pro',\n    'LLaMA 4',\n    'DeepSeek-R1',\n    'Qwen 3',\n    'Grok 3',\n    'Mistral Large 2',\n    'Gemma 3',\n    'Mixtral 8x22B',\n]\n\ntype PromptInput02Props = {\n    quickPrompts?: { label: string; value: string }[]\n}\n\nexport default function PromptInput02({ quickPrompts }: PromptInput02Props) {\n    const [message, setMessage] = React.useState<string>('')\n    const [searchToggle, setSearchToggle] = React.useState<boolean>(false)\n    const [reasonToggle, setReasonToggle] = React.useState<boolean>(false)\n    const [model, setModel] = React.useState<string>(models[0])\n\n    const handleSubmit = () => {\n        if (message.trim() === '') return\n        // Handle message submission logic here\n        console.log('Message submitted:', message)\n        console.log(\n            'Search toggle state:',\n            searchToggle ? 'Enabled' : 'Disabled'\n        )\n        console.log(\n            'Reason toggle state:',\n            reasonToggle ? 'Enabled' : 'Disabled'\n        )\n        setMessage('')\n    }\n\n    return (\n        <>\n            <div\n                className={cn(\n                    'placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input rounded-xl border bg-transparent text-base shadow-xs transition-[color,box-shadow] outline-none md:text-sm',\n                    'focus-within:border-ring focus-within:ring-ring/50 focus-within:ring-[3px]',\n                    'has-aria-invalid:ring-destructive/20 dark:has-aria-invalid:ring-destructive/40 has-aria-invalid:border-destructive group',\n                    'flex w-full flex-col'\n                )}\n            >\n                <div className=\"flex items-center justify-center gap-2 p-4\">\n                    <TextareaAutosize\n                        className=\"w-full resize-none border-none bg-transparent text-base focus-visible:outline-none\"\n                        placeholder=\"Ask anything...\"\n                        minRows={1}\n                        rows={1}\n                        maxRows={6}\n                        value={message}\n                        onChange={(e) => setMessage(e.target.value)}\n                    />\n\n                    <Button\n                        type=\"submit\"\n                        variant=\"ghost\"\n                        className=\"cursor-pointer\"\n                        disabled={!message || message.length === 0}\n                        onClick={() => handleSubmit()}\n                    >\n                        Send to AI\n                        <CornerLeftUpIcon />\n                    </Button>\n                </div>\n\n                <div className=\"border-border flex items-center justify-between border-t p-3 px-4\">\n                    <TooltipProvider delayDuration={0}>\n                        <div className=\"flex items-center gap-2\">\n                            <Attachments />\n\n                            <Tooltip>\n                                <Toggle\n                                    value=\"search\"\n                                    asChild\n                                    pressed={searchToggle}\n                                    onPressedChange={setSearchToggle}\n                                    className=\"cursor-pointer\"\n                                >\n                                    <TooltipTrigger>\n                                        <GlobeIcon />\n                                        <span className=\"hidden sm:block\">\n                                            Search\n                                        </span>\n                                    </TooltipTrigger>\n                                </Toggle>\n                                <TooltipContent>\n                                    <p>Search the web</p>\n                                </TooltipContent>\n                            </Tooltip>\n\n                            <Tooltip>\n                                <Toggle\n                                    value=\"reason\"\n                                    asChild\n                                    pressed={reasonToggle}\n                                    onPressedChange={setReasonToggle}\n                                    className=\"cursor-pointer\"\n                                >\n                                    <TooltipTrigger>\n                                        <LightbulbIcon />\n                                        <span className=\"hidden sm:block\">\n                                            Reason\n                                        </span>\n                                    </TooltipTrigger>\n                                </Toggle>\n                                <TooltipContent>\n                                    <p>Think before responding</p>\n                                </TooltipContent>\n                            </Tooltip>\n                        </div>\n                    </TooltipProvider>\n\n                    <Select value={model} onValueChange={setModel}>\n                        <SelectTrigger className=\"max-w-[120px] sm:max-w-max\">\n                            <SelectValue placeholder=\"Select modal\" />\n                        </SelectTrigger>\n                        <SelectContent align=\"end\" side=\"top\">\n                            <SelectGroup>\n                                {models.map((model) => (\n                                    <SelectItem\n                                        key={model}\n                                        value={model}\n                                        onClick={() => setModel(model)}\n                                    >\n                                        {model}\n                                    </SelectItem>\n                                ))}\n                            </SelectGroup>\n                        </SelectContent>\n                    </Select>\n                </div>\n            </div>\n            {quickPrompts && quickPrompts.length > 0 && (\n                <div className=\"w-full\">\n                    <div className=\"mt-4 flex flex-wrap items-center gap-2\">\n                        {quickPrompts.map((prompt) => (\n                            <Button\n                                key={prompt.value}\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={() => setMessage(prompt.value)}\n                                className=\"cursor-pointer\"\n                            >\n                                {prompt.label}\n                            </Button>\n                        ))}\n                    </div>\n                </div>\n            )}\n        </>\n    )\n}\n\nfunction Attachments() {\n    return (\n        <DropdownMenu>\n            <Tooltip>\n                <TooltipTrigger asChild>\n                    <DropdownMenuTrigger asChild>\n                        <Button\n                            type=\"button\"\n                            variant=\"ghost\"\n                            className=\"cursor-pointer\"\n                        >\n                            <PaperclipIcon />\n                            <span className=\"hidden sm:block\">Attachments</span>\n                        </Button>\n                    </DropdownMenuTrigger>\n                </TooltipTrigger>\n\n                <TooltipContent>\n                    <p>Add photos and files</p>\n                </TooltipContent>\n            </Tooltip>\n\n            <DropdownMenuContent align=\"start\" side=\"top\">\n                <DropdownMenuItem className=\"cursor-pointer\">\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 87.3 78\"\n                    >\n                        <path\n                            fill=\"#0066da\"\n                            d=\"m6.6 66.85 3.85 6.65c.8 1.4 1.95 2.5 3.3 3.3L27.5 53H0c0 1.55.4 3.1 1.2 4.5z\"\n                        />\n                        <path\n                            fill=\"#00ac47\"\n                            d=\"M43.65 25 29.9 1.2c-1.35.8-2.5 1.9-3.3 3.3l-25.4 44A9.06 9.06 0 0 0 0 53h27.5z\"\n                        />\n                        <path\n                            fill=\"#ea4335\"\n                            d=\"M73.55 76.8c1.35-.8 2.5-1.9 3.3-3.3l1.6-2.75L86.1 57.5c.8-1.4 1.2-2.95 1.2-4.5H59.798l5.852 11.5z\"\n                        />\n                        <path\n                            fill=\"#00832d\"\n                            d=\"M43.65 25 57.4 1.2C56.05.4 54.5 0 52.9 0H34.4c-1.6 0-3.15.45-4.5 1.2z\"\n                        />\n                        <path\n                            fill=\"#2684fc\"\n                            d=\"M59.8 53H27.5L13.75 76.8c1.35.8 2.9 1.2 4.5 1.2h50.8c1.6 0 3.15-.45 4.5-1.2z\"\n                        />\n                        <path\n                            fill=\"#ffba00\"\n                            d=\"m73.4 26.5-12.7-22c-.8-1.4-1.95-2.5-3.3-3.3L43.65 25 59.8 53h27.45c0-1.55-.4-3.1-1.2-4.5z\"\n                        />\n                    </svg>\n                    Connect to Google Drive\n                </DropdownMenuItem>\n                <DropdownMenuSeparator />\n                <DropdownMenuItem className=\"cursor-pointer\">\n                    <CloudUploadIcon /> Add photos and files\n                </DropdownMenuItem>\n            </DropdownMenuContent>\n        </DropdownMenu>\n    )\n}\n",
      "type": "registry:component",
      "target": "components/prompt-input-02.tsx"
    },
    {
      "path": "components/ui/button.tsx",
      "content": "import * as React from 'react'\nimport { Slot } from '@radix-ui/react-slot'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { cn } from '@/lib/utils'\n\nconst buttonVariants = cva(\n    \"inline-flex items-center relative justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive group\",\n    {\n        variants: {\n            variant: {\n                default:\n                    'bg-primary text-primary-foreground shadow-xs hover:bg-primary/90',\n                destructive:\n                    'bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60',\n                outline:\n                    'border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50',\n                secondary:\n                    'bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80',\n                ghost: 'hover:bg-accent hover:text-accent-foreground',\n                link: 'text-primary underline-offset-4 hover:underline',\n                defaultWithOutline:\n                    'bg-transparent text-primary-foreground border border-border hover:border-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50 dark:text-primary-foreground before:-z-10 before:content-[\"\"] before:absolute before:top-1/2 before:left-1/2 dark:hover:border-foreground before:-translate-x-1/2 before:-translate-y-1/2 before:w-[calc(100%-6px)] before:h-[calc(100%-6px)] before:rounded-sm before:bg-primary  before:transition-colors duration-500',\n                secondaryWithOutline:\n                    'bg-transparent text-secondary-foreground border border-border hover:border-foreground dark:bg-input/30 dark:border-input dark:hover:border-primary dark:hover:bg-input/50 dark:text-secondary-foreground before:-z-10 before:content-[\"\"] before:absolute before:top-1/2 before:left-1/2 before:-translate-x-1/2 before:-translate-y-1/2 before:w-[calc(100%-6px)] before:h-[calc(100%-6px)] before:rounded-sm before:bg-secondary before:transition-colors duration-500',\n            },\n            size: {\n                default: 'h-9 px-4 py-2 has-[>svg]:px-3',\n                sm: 'h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5',\n                lg: 'h-10 rounded-md px-6 has-[>svg]:px-4',\n                xl: 'h-12 rounded-md px-8 has-[>svg]:px-6',\n                icon: 'size-9',\n                iconSm: 'size-8',\n                iconXsm: 'size-5',\n            },\n        },\n        defaultVariants: {\n            variant: 'default',\n            size: 'default',\n        },\n    }\n)\n\nfunction Button({\n    className,\n    variant,\n    size,\n    asChild = false,\n    ...props\n}: React.ComponentProps<'button'> &\n    VariantProps<typeof buttonVariants> & {\n        asChild?: boolean\n    }) {\n    const Comp = asChild ? Slot : 'button'\n\n    return (\n        <Comp\n            data-slot=\"button\"\n            className={cn(buttonVariants({ variant, size, className }))}\n            {...props}\n        />\n    )\n}\n\nexport { Button, buttonVariants }\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "components/ui/popover.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Popover({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Root>) {\n  return <PopoverPrimitive.Root data-slot=\"popover\" {...props} />\n}\n\nfunction PopoverTrigger({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {\n  return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />\n}\n\nfunction PopoverContent({\n  className,\n  align = \"center\",\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Content>) {\n  return (\n    <PopoverPrimitive.Portal>\n      <PopoverPrimitive.Content\n        data-slot=\"popover-content\"\n        align={align}\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 origin-(--radix-popover-content-transform-origin) rounded-md border p-4 shadow-md outline-hidden\",\n          className\n        )}\n        {...props}\n      />\n    </PopoverPrimitive.Portal>\n  )\n}\n\nfunction PopoverAnchor({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Anchor>) {\n  return <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />\n}\n\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "components/ui/dropdown-menu.tsx",
      "content": "'use client'\n\nimport * as React from 'react'\nimport * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu'\nimport { CheckIcon, ChevronRightIcon, CircleIcon } from 'lucide-react'\n\nimport { cn } from '@/lib/utils'\n\nfunction DropdownMenu({\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Root>) {\n    return <DropdownMenuPrimitive.Root data-slot=\"dropdown-menu\" {...props} />\n}\n\nfunction DropdownMenuPortal({\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Portal>) {\n    return (\n        <DropdownMenuPrimitive.Portal\n            data-slot=\"dropdown-menu-portal\"\n            {...props}\n        />\n    )\n}\n\nfunction DropdownMenuTrigger({\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Trigger>) {\n    return (\n        <DropdownMenuPrimitive.Trigger\n            data-slot=\"dropdown-menu-trigger\"\n            {...props}\n        />\n    )\n}\n\nfunction DropdownMenuContent({\n    className,\n    sideOffset = 4,\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Content>) {\n    return (\n        <DropdownMenuPrimitive.Portal>\n            <DropdownMenuPrimitive.Content\n                data-slot=\"dropdown-menu-content\"\n                sideOffset={sideOffset}\n                className={cn(\n                    'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-h-(--radix-dropdown-menu-content-available-height) min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md',\n                    className\n                )}\n                {...props}\n            />\n        </DropdownMenuPrimitive.Portal>\n    )\n}\n\nfunction DropdownMenuGroup({\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Group>) {\n    return (\n        <DropdownMenuPrimitive.Group\n            data-slot=\"dropdown-menu-group\"\n            {...props}\n        />\n    )\n}\n\nfunction DropdownMenuItem({\n    className,\n    inset,\n    variant = 'default',\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n    variant?: 'default' | 'destructive'\n}) {\n    return (\n        <DropdownMenuPrimitive.Item\n            data-slot=\"dropdown-menu-item\"\n            data-inset={inset}\n            data-variant={variant}\n            className={cn(\n                \"focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/20 data-[variant=destructive]:focus:text-destructive data-[variant=destructive]:*:[svg]:!text-destructive [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden transition-all select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n                className\n            )}\n            {...props}\n        />\n    )\n}\n\nfunction DropdownMenuCheckboxItem({\n    className,\n    children,\n    checked,\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.CheckboxItem>) {\n    return (\n        <DropdownMenuPrimitive.CheckboxItem\n            data-slot=\"dropdown-menu-checkbox-item\"\n            className={cn(\n                \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n                className\n            )}\n            checked={checked}\n            {...props}\n        >\n            <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n                <DropdownMenuPrimitive.ItemIndicator>\n                    <CheckIcon className=\"size-4\" />\n                </DropdownMenuPrimitive.ItemIndicator>\n            </span>\n            {children}\n        </DropdownMenuPrimitive.CheckboxItem>\n    )\n}\n\nfunction DropdownMenuRadioGroup({\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioGroup>) {\n    return (\n        <DropdownMenuPrimitive.RadioGroup\n            data-slot=\"dropdown-menu-radio-group\"\n            {...props}\n        />\n    )\n}\n\nfunction DropdownMenuRadioItem({\n    className,\n    children,\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioItem>) {\n    return (\n        <DropdownMenuPrimitive.RadioItem\n            data-slot=\"dropdown-menu-radio-item\"\n            className={cn(\n                \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n                className\n            )}\n            {...props}\n        >\n            <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n                <DropdownMenuPrimitive.ItemIndicator>\n                    <CircleIcon className=\"size-2 fill-current\" />\n                </DropdownMenuPrimitive.ItemIndicator>\n            </span>\n            {children}\n        </DropdownMenuPrimitive.RadioItem>\n    )\n}\n\nfunction DropdownMenuLabel({\n    className,\n    inset,\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n}) {\n    return (\n        <DropdownMenuPrimitive.Label\n            data-slot=\"dropdown-menu-label\"\n            data-inset={inset}\n            className={cn(\n                'px-2 py-1.5 text-sm font-medium data-[inset]:pl-8',\n                className\n            )}\n            {...props}\n        />\n    )\n}\n\nfunction DropdownMenuSeparator({\n    className,\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Separator>) {\n    return (\n        <DropdownMenuPrimitive.Separator\n            data-slot=\"dropdown-menu-separator\"\n            className={cn('bg-border -mx-1 my-1 h-px', className)}\n            {...props}\n        />\n    )\n}\n\nfunction DropdownMenuShortcut({\n    className,\n    ...props\n}: React.ComponentProps<'span'>) {\n    return (\n        <span\n            data-slot=\"dropdown-menu-shortcut\"\n            className={cn(\n                'text-muted-foreground border-border ml-auto flex aspect-square h-5 w-5 items-center justify-center rounded-sm border text-xs leading-none font-medium tracking-widest',\n                className\n            )}\n            {...props}\n        />\n    )\n}\n\nfunction DropdownMenuSub({\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Sub>) {\n    return (\n        <DropdownMenuPrimitive.Sub data-slot=\"dropdown-menu-sub\" {...props} />\n    )\n}\n\nfunction DropdownMenuSubTrigger({\n    className,\n    inset,\n    children,\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n}) {\n    return (\n        <DropdownMenuPrimitive.SubTrigger\n            data-slot=\"dropdown-menu-sub-trigger\"\n            data-inset={inset}\n            className={cn(\n                'focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8',\n                className\n            )}\n            {...props}\n        >\n            {children}\n            <ChevronRightIcon className=\"ml-auto size-4\" />\n        </DropdownMenuPrimitive.SubTrigger>\n    )\n}\n\nfunction DropdownMenuSubContent({\n    className,\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubContent>) {\n    return (\n        <DropdownMenuPrimitive.SubContent\n            data-slot=\"dropdown-menu-sub-content\"\n            className={cn(\n                'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-hidden rounded-md border p-1 shadow-lg',\n                className\n            )}\n            {...props}\n        />\n    )\n}\n\nexport {\n    DropdownMenu,\n    DropdownMenuPortal,\n    DropdownMenuTrigger,\n    DropdownMenuContent,\n    DropdownMenuGroup,\n    DropdownMenuLabel,\n    DropdownMenuItem,\n    DropdownMenuCheckboxItem,\n    DropdownMenuRadioGroup,\n    DropdownMenuRadioItem,\n    DropdownMenuSeparator,\n    DropdownMenuShortcut,\n    DropdownMenuSub,\n    DropdownMenuSubTrigger,\n    DropdownMenuSubContent,\n}\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "components/ui/tooltip.tsx",
      "content": "'use client'\n\nimport * as React from 'react'\nimport * as TooltipPrimitive from '@radix-ui/react-tooltip'\n\nimport { cn } from '@/lib/utils'\n\nfunction TooltipProvider({\n    delayDuration = 0,\n    ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Provider>) {\n    return (\n        <TooltipPrimitive.Provider\n            data-slot=\"tooltip-provider\"\n            delayDuration={delayDuration}\n            {...props}\n        />\n    )\n}\n\nfunction Tooltip({\n    ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Root>) {\n    return (\n        <TooltipProvider>\n            <TooltipPrimitive.Root data-slot=\"tooltip\" {...props} />\n        </TooltipProvider>\n    )\n}\n\nfunction TooltipTrigger({\n    ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Trigger>) {\n    return <TooltipPrimitive.Trigger data-slot=\"tooltip-trigger\" {...props} />\n}\n\nfunction TooltipContent({\n    className,\n    sideOffset = 0,\n    children,\n    showArrow = false,\n    ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Content> & {\n    showArrow?: boolean\n}) {\n    return (\n        <TooltipPrimitive.Portal>\n            <TooltipPrimitive.Content\n                data-slot=\"tooltip-content\"\n                sideOffset={sideOffset}\n                className={cn(\n                    'bg-popover text-popover-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-fit origin-(--radix-tooltip-content-transform-origin) rounded-md px-3 py-1.5 text-xs text-balance',\n                    !showArrow && 'border-grid -translate-y-2 border',\n                    className\n                )}\n                {...props}\n            >\n                {children}\n                {showArrow && (\n                    <TooltipPrimitive.Arrow className=\"bg-popover fill-popover z-50 size-2.5 translate-y-[calc(-50%_-_2px)] rotate-45 rounded-[2px]\" />\n                )}\n            </TooltipPrimitive.Content>\n        </TooltipPrimitive.Portal>\n    )\n}\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "components/ui/toggle.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium hover:bg-muted hover:text-muted-foreground disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 [&_svg]:shrink-0 focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] outline-none transition-[color,box-shadow] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive whitespace-nowrap\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent shadow-xs hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-9 px-2 min-w-9\",\n        sm: \"h-8 px-1.5 min-w-8\",\n        lg: \"h-10 px-2.5 min-w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Toggle({\n  className,\n  variant,\n  size,\n  ...props\n}: React.ComponentProps<typeof TogglePrimitive.Root> &\n  VariantProps<typeof toggleVariants>) {\n  return (\n    <TogglePrimitive.Root\n      data-slot=\"toggle\"\n      className={cn(toggleVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Toggle, toggleVariants }\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "components/ui/select.tsx",
      "content": "'use client'\n\nimport * as React from 'react'\nimport * as SelectPrimitive from '@radix-ui/react-select'\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from 'lucide-react'\n\nimport { cn } from '@/lib/utils'\n\nfunction Select({\n    ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n    return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n    ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n    return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n    ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n    return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n    className,\n    size = 'default',\n    children,\n    ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n    size?: 'sm' | 'default'\n}) {\n    return (\n        <SelectPrimitive.Trigger\n            data-slot=\"select-trigger\"\n            data-size={size}\n            className={cn(\n                \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n                className\n            )}\n            {...props}\n        >\n            {children}\n            <SelectPrimitive.Icon asChild>\n                <ChevronDownIcon className=\"size-4 opacity-50\" />\n            </SelectPrimitive.Icon>\n        </SelectPrimitive.Trigger>\n    )\n}\n\nfunction SelectContent({\n    className,\n    children,\n    position = 'popper',\n    ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n    return (\n        <SelectPrimitive.Portal>\n            <SelectPrimitive.Content\n                data-slot=\"select-content\"\n                className={cn(\n                    'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md',\n                    position === 'popper' &&\n                        'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\n                    className\n                )}\n                position={position}\n                {...props}\n            >\n                <SelectScrollUpButton />\n                <SelectPrimitive.Viewport\n                    className={cn(\n                        'p-1',\n                        position === 'popper' &&\n                            'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1'\n                    )}\n                >\n                    {children}\n                </SelectPrimitive.Viewport>\n                <SelectScrollDownButton />\n            </SelectPrimitive.Content>\n        </SelectPrimitive.Portal>\n    )\n}\n\nfunction SelectLabel({\n    className,\n    ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n    return (\n        <SelectPrimitive.Label\n            data-slot=\"select-label\"\n            className={cn(\n                'text-muted-foreground px-2 py-1.5 text-xs',\n                className\n            )}\n            {...props}\n        />\n    )\n}\n\nfunction SelectItem({\n    className,\n    children,\n    ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n    return (\n        <SelectPrimitive.Item\n            data-slot=\"select-item\"\n            className={cn(\n                \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n                className\n            )}\n            {...props}\n        >\n            <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n                <SelectPrimitive.ItemIndicator>\n                    <CheckIcon className=\"size-4\" />\n                </SelectPrimitive.ItemIndicator>\n            </span>\n            <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n        </SelectPrimitive.Item>\n    )\n}\n\nfunction SelectSeparator({\n    className,\n    ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n    return (\n        <SelectPrimitive.Separator\n            data-slot=\"select-separator\"\n            className={cn(\n                'bg-border pointer-events-none -mx-1 my-1 h-px',\n                className\n            )}\n            {...props}\n        />\n    )\n}\n\nfunction SelectScrollUpButton({\n    className,\n    ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n    return (\n        <SelectPrimitive.ScrollUpButton\n            data-slot=\"select-scroll-up-button\"\n            className={cn(\n                'flex cursor-default items-center justify-center py-1',\n                className\n            )}\n            {...props}\n        >\n            <ChevronUpIcon className=\"size-4\" />\n        </SelectPrimitive.ScrollUpButton>\n    )\n}\n\nfunction SelectScrollDownButton({\n    className,\n    ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n    return (\n        <SelectPrimitive.ScrollDownButton\n            data-slot=\"select-scroll-down-button\"\n            className={cn(\n                'flex cursor-default items-center justify-center py-1',\n                className\n            )}\n            {...props}\n        >\n            <ChevronDownIcon className=\"size-4\" />\n        </SelectPrimitive.ScrollDownButton>\n    )\n}\n\nexport {\n    Select,\n    SelectContent,\n    SelectGroup,\n    SelectItem,\n    SelectLabel,\n    SelectScrollDownButton,\n    SelectScrollUpButton,\n    SelectSeparator,\n    SelectTrigger,\n    SelectValue,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ],
  "css": {
    ".container-line-wrapper": {
      "margin-left": "auto",
      "margin-right": "auto",
      "width": "100%",
      "max-width": "800px"
    },
    "@media (min-width: 800px)": {
      ".container-line-wrapper": {
        "border-top": "none",
        "border-bottom": "none",
        "border-left": "1px solid var(--border)",
        "border-right": "1px solid var(--border)"
      }
    }
  }
}