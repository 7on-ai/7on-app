{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "rich-dropdown",
  "type": "registry:component",
  "title": "Rich Dropdown",
  "description": "A dropdown menu with rich content",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority",
    "@radix-ui/react-dropdown-menu",
    "lucide-react",
    "@radix-ui/react-label",
    "@radix-ui/react-select",
    "@radix-ui/react-switch",
    "next-themes"
  ],
  "files": [
    {
      "path": "registry/default/components/dropdown-menu/rich-dropdown.tsx",
      "content": "'use client'\n\nimport { Button } from '@/components/ui/button'\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuSeparator,\n    DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu'\nimport { DropdownMenuItem as RadixDropdownMenuItem } from '@radix-ui/react-dropdown-menu'\nimport { Label } from '@/components/ui/label'\nimport {\n    ArrowDownAZIcon,\n    ArrowUpAZIcon,\n    ChevronDownIcon,\n    XIcon,\n} from 'lucide-react'\nimport {\n    Select,\n    SelectContent,\n    SelectItem,\n    SelectTrigger,\n    SelectValue,\n} from '@/components/ui/select'\nimport { Switch } from '@/components/ui/switch'\nimport React from 'react'\nimport { useTheme } from 'next-themes'\n\ntype Item = {\n    label: string\n    ItemComponent: React.ReactNode\n}\n\nconst items: Item[] = [\n    {\n        label: 'Filter',\n        ItemComponent: <FilterItem />,\n    },\n    {\n        label: 'Title',\n        ItemComponent: <TitleComponent />,\n    },\n    { label: 'Custom Config', ItemComponent: <CustomConfigComponent /> },\n    { label: 'Dark Mode', ItemComponent: <DarkModeComponent /> },\n]\n\nexport default function RichDropdown() {\n    return (\n        <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n                <Button variant=\"outline\" className=\"cursor-pointer\">\n                    Rich Dropdown <ChevronDownIcon />\n                </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent className=\"w-[100svw] max-w-[250px]\">\n                {items.map((item) => (\n                    <div\n                        key={item.label}\n                        className=\"focus-within:bg-accent focus-within:text-accent-foreground grid min-h-9 grid-cols-2 place-content-center gap-2 rounded-md px-2 py-1.5 transition-all\"\n                    >\n                        <Label className=\"pl-2\">{item.label}</Label>\n\n                        {item.ItemComponent}\n                    </div>\n                ))}\n\n                <DropdownMenuSeparator />\n                <DropdownMenuItem className=\"flex justify-center pl-0\">\n                    Clear all\n                </DropdownMenuItem>\n            </DropdownMenuContent>\n        </DropdownMenu>\n    )\n}\n\nfunction FilterItem() {\n    return (\n        <Select defaultValue=\"asc\">\n            <div className=\"flex justify-center\">\n                <DropdownMenuItem asChild onSelect={(e) => e.preventDefault()}>\n                    <SelectTrigger className=\"w-fit\" size=\"sm\">\n                        <SelectValue placeholder=\"Filter\" />\n                    </SelectTrigger>\n                </DropdownMenuItem>\n            </div>\n\n            <SelectContent align=\"end\">\n                <SelectItem value=\"asc\">\n                    <ArrowDownAZIcon /> Asc\n                </SelectItem>\n                <SelectItem value=\"desc\">\n                    <ArrowUpAZIcon /> Desc\n                </SelectItem>\n                <SelectItem value=\"none\">\n                    <XIcon /> None\n                </SelectItem>\n            </SelectContent>\n        </Select>\n    )\n}\n\nfunction TitleComponent() {\n    return (\n        <div className=\"flex items-center justify-center\">\n            <RadixDropdownMenuItem asChild onSelect={(e) => e.preventDefault()}>\n                <Switch />\n            </RadixDropdownMenuItem>\n        </div>\n    )\n}\n\nfunction CustomConfigComponent() {\n    return (\n        <div className=\"flex items-center justify-center\">\n            <RadixDropdownMenuItem asChild onSelect={(e) => e.preventDefault()}>\n                <Switch />\n            </RadixDropdownMenuItem>\n        </div>\n    )\n}\n\nfunction DarkModeComponent() {\n    const { resolvedTheme, setTheme } = useTheme()\n\n    return (\n        <div className=\"flex items-center justify-center\">\n            <RadixDropdownMenuItem asChild onSelect={(e) => e.preventDefault()}>\n                <Switch\n                    checked={resolvedTheme === 'dark'}\n                    onCheckedChange={(checked) =>\n                        setTheme(checked ? 'dark' : 'light')\n                    }\n                />\n            </RadixDropdownMenuItem>\n        </div>\n    )\n}\n",
      "type": "registry:component",
      "target": "components/rich-dropdown.tsx"
    },
    {
      "path": "components/ui/button.tsx",
      "content": "import * as React from 'react'\nimport { Slot } from '@radix-ui/react-slot'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { cn } from '@/lib/utils'\n\nconst buttonVariants = cva(\n    \"inline-flex items-center relative justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive group\",\n    {\n        variants: {\n            variant: {\n                default:\n                    'bg-primary text-primary-foreground shadow-xs hover:bg-primary/90',\n                destructive:\n                    'bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60',\n                outline:\n                    'border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50',\n                secondary:\n                    'bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80',\n                ghost: 'hover:bg-accent hover:text-accent-foreground',\n                link: 'text-primary underline-offset-4 hover:underline',\n                defaultWithOutline:\n                    'bg-transparent text-primary-foreground border border-border hover:border-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50 dark:text-primary-foreground before:-z-10 before:content-[\"\"] before:absolute before:top-1/2 before:left-1/2 dark:hover:border-foreground before:-translate-x-1/2 before:-translate-y-1/2 before:w-[calc(100%-6px)] before:h-[calc(100%-6px)] before:rounded-sm before:bg-primary  before:transition-colors duration-500',\n                secondaryWithOutline:\n                    'bg-transparent text-secondary-foreground border border-border hover:border-foreground dark:bg-input/30 dark:border-input dark:hover:border-primary dark:hover:bg-input/50 dark:text-secondary-foreground before:-z-10 before:content-[\"\"] before:absolute before:top-1/2 before:left-1/2 before:-translate-x-1/2 before:-translate-y-1/2 before:w-[calc(100%-6px)] before:h-[calc(100%-6px)] before:rounded-sm before:bg-secondary before:transition-colors duration-500',\n            },\n            size: {\n                default: 'h-9 px-4 py-2 has-[>svg]:px-3',\n                sm: 'h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5',\n                lg: 'h-10 rounded-md px-6 has-[>svg]:px-4',\n                xl: 'h-12 rounded-md px-8 has-[>svg]:px-6',\n                icon: 'size-9',\n                iconSm: 'size-8',\n                iconXsm: 'size-5',\n            },\n        },\n        defaultVariants: {\n            variant: 'default',\n            size: 'default',\n        },\n    }\n)\n\nfunction Button({\n    className,\n    variant,\n    size,\n    asChild = false,\n    ...props\n}: React.ComponentProps<'button'> &\n    VariantProps<typeof buttonVariants> & {\n        asChild?: boolean\n    }) {\n    const Comp = asChild ? Slot : 'button'\n\n    return (\n        <Comp\n            data-slot=\"button\"\n            className={cn(buttonVariants({ variant, size, className }))}\n            {...props}\n        />\n    )\n}\n\nexport { Button, buttonVariants }\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "components/ui/dropdown-menu.tsx",
      "content": "'use client'\n\nimport * as React from 'react'\nimport * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu'\nimport { CheckIcon, ChevronRightIcon, CircleIcon } from 'lucide-react'\n\nimport { cn } from '@/lib/utils'\n\nfunction DropdownMenu({\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Root>) {\n    return <DropdownMenuPrimitive.Root data-slot=\"dropdown-menu\" {...props} />\n}\n\nfunction DropdownMenuPortal({\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Portal>) {\n    return (\n        <DropdownMenuPrimitive.Portal\n            data-slot=\"dropdown-menu-portal\"\n            {...props}\n        />\n    )\n}\n\nfunction DropdownMenuTrigger({\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Trigger>) {\n    return (\n        <DropdownMenuPrimitive.Trigger\n            data-slot=\"dropdown-menu-trigger\"\n            {...props}\n        />\n    )\n}\n\nfunction DropdownMenuContent({\n    className,\n    sideOffset = 4,\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Content>) {\n    return (\n        <DropdownMenuPrimitive.Portal>\n            <DropdownMenuPrimitive.Content\n                data-slot=\"dropdown-menu-content\"\n                sideOffset={sideOffset}\n                className={cn(\n                    'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-h-(--radix-dropdown-menu-content-available-height) min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md',\n                    className\n                )}\n                {...props}\n            />\n        </DropdownMenuPrimitive.Portal>\n    )\n}\n\nfunction DropdownMenuGroup({\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Group>) {\n    return (\n        <DropdownMenuPrimitive.Group\n            data-slot=\"dropdown-menu-group\"\n            {...props}\n        />\n    )\n}\n\nfunction DropdownMenuItem({\n    className,\n    inset,\n    variant = 'default',\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n    variant?: 'default' | 'destructive'\n}) {\n    return (\n        <DropdownMenuPrimitive.Item\n            data-slot=\"dropdown-menu-item\"\n            data-inset={inset}\n            data-variant={variant}\n            className={cn(\n                \"focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/20 data-[variant=destructive]:focus:text-destructive data-[variant=destructive]:*:[svg]:!text-destructive [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden transition-all select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n                className\n            )}\n            {...props}\n        />\n    )\n}\n\nfunction DropdownMenuCheckboxItem({\n    className,\n    children,\n    checked,\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.CheckboxItem>) {\n    return (\n        <DropdownMenuPrimitive.CheckboxItem\n            data-slot=\"dropdown-menu-checkbox-item\"\n            className={cn(\n                \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n                className\n            )}\n            checked={checked}\n            {...props}\n        >\n            <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n                <DropdownMenuPrimitive.ItemIndicator>\n                    <CheckIcon className=\"size-4\" />\n                </DropdownMenuPrimitive.ItemIndicator>\n            </span>\n            {children}\n        </DropdownMenuPrimitive.CheckboxItem>\n    )\n}\n\nfunction DropdownMenuRadioGroup({\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioGroup>) {\n    return (\n        <DropdownMenuPrimitive.RadioGroup\n            data-slot=\"dropdown-menu-radio-group\"\n            {...props}\n        />\n    )\n}\n\nfunction DropdownMenuRadioItem({\n    className,\n    children,\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioItem>) {\n    return (\n        <DropdownMenuPrimitive.RadioItem\n            data-slot=\"dropdown-menu-radio-item\"\n            className={cn(\n                \"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n                className\n            )}\n            {...props}\n        >\n            <span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\n                <DropdownMenuPrimitive.ItemIndicator>\n                    <CircleIcon className=\"size-2 fill-current\" />\n                </DropdownMenuPrimitive.ItemIndicator>\n            </span>\n            {children}\n        </DropdownMenuPrimitive.RadioItem>\n    )\n}\n\nfunction DropdownMenuLabel({\n    className,\n    inset,\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n}) {\n    return (\n        <DropdownMenuPrimitive.Label\n            data-slot=\"dropdown-menu-label\"\n            data-inset={inset}\n            className={cn(\n                'px-2 py-1.5 text-sm font-medium data-[inset]:pl-8',\n                className\n            )}\n            {...props}\n        />\n    )\n}\n\nfunction DropdownMenuSeparator({\n    className,\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Separator>) {\n    return (\n        <DropdownMenuPrimitive.Separator\n            data-slot=\"dropdown-menu-separator\"\n            className={cn('bg-border -mx-1 my-1 h-px', className)}\n            {...props}\n        />\n    )\n}\n\nfunction DropdownMenuShortcut({\n    className,\n    ...props\n}: React.ComponentProps<'span'>) {\n    return (\n        <span\n            data-slot=\"dropdown-menu-shortcut\"\n            className={cn(\n                'text-muted-foreground border-border ml-auto flex aspect-square h-5 w-5 items-center justify-center rounded-sm border text-xs leading-none font-medium tracking-widest',\n                className\n            )}\n            {...props}\n        />\n    )\n}\n\nfunction DropdownMenuSub({\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Sub>) {\n    return (\n        <DropdownMenuPrimitive.Sub data-slot=\"dropdown-menu-sub\" {...props} />\n    )\n}\n\nfunction DropdownMenuSubTrigger({\n    className,\n    inset,\n    children,\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n}) {\n    return (\n        <DropdownMenuPrimitive.SubTrigger\n            data-slot=\"dropdown-menu-sub-trigger\"\n            data-inset={inset}\n            className={cn(\n                'focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8',\n                className\n            )}\n            {...props}\n        >\n            {children}\n            <ChevronRightIcon className=\"ml-auto size-4\" />\n        </DropdownMenuPrimitive.SubTrigger>\n    )\n}\n\nfunction DropdownMenuSubContent({\n    className,\n    ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.SubContent>) {\n    return (\n        <DropdownMenuPrimitive.SubContent\n            data-slot=\"dropdown-menu-sub-content\"\n            className={cn(\n                'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-hidden rounded-md border p-1 shadow-lg',\n                className\n            )}\n            {...props}\n        />\n    )\n}\n\nexport {\n    DropdownMenu,\n    DropdownMenuPortal,\n    DropdownMenuTrigger,\n    DropdownMenuContent,\n    DropdownMenuGroup,\n    DropdownMenuLabel,\n    DropdownMenuItem,\n    DropdownMenuCheckboxItem,\n    DropdownMenuRadioGroup,\n    DropdownMenuRadioItem,\n    DropdownMenuSeparator,\n    DropdownMenuShortcut,\n    DropdownMenuSub,\n    DropdownMenuSubTrigger,\n    DropdownMenuSubContent,\n}\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "components/ui/label.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "components/ui/select.tsx",
      "content": "'use client'\n\nimport * as React from 'react'\nimport * as SelectPrimitive from '@radix-ui/react-select'\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from 'lucide-react'\n\nimport { cn } from '@/lib/utils'\n\nfunction Select({\n    ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n    return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n    ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n    return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n    ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n    return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n    className,\n    size = 'default',\n    children,\n    ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n    size?: 'sm' | 'default'\n}) {\n    return (\n        <SelectPrimitive.Trigger\n            data-slot=\"select-trigger\"\n            data-size={size}\n            className={cn(\n                \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n                className\n            )}\n            {...props}\n        >\n            {children}\n            <SelectPrimitive.Icon asChild>\n                <ChevronDownIcon className=\"size-4 opacity-50\" />\n            </SelectPrimitive.Icon>\n        </SelectPrimitive.Trigger>\n    )\n}\n\nfunction SelectContent({\n    className,\n    children,\n    position = 'popper',\n    ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n    return (\n        <SelectPrimitive.Portal>\n            <SelectPrimitive.Content\n                data-slot=\"select-content\"\n                className={cn(\n                    'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md',\n                    position === 'popper' &&\n                        'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\n                    className\n                )}\n                position={position}\n                {...props}\n            >\n                <SelectScrollUpButton />\n                <SelectPrimitive.Viewport\n                    className={cn(\n                        'p-1',\n                        position === 'popper' &&\n                            'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1'\n                    )}\n                >\n                    {children}\n                </SelectPrimitive.Viewport>\n                <SelectScrollDownButton />\n            </SelectPrimitive.Content>\n        </SelectPrimitive.Portal>\n    )\n}\n\nfunction SelectLabel({\n    className,\n    ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n    return (\n        <SelectPrimitive.Label\n            data-slot=\"select-label\"\n            className={cn(\n                'text-muted-foreground px-2 py-1.5 text-xs',\n                className\n            )}\n            {...props}\n        />\n    )\n}\n\nfunction SelectItem({\n    className,\n    children,\n    ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n    return (\n        <SelectPrimitive.Item\n            data-slot=\"select-item\"\n            className={cn(\n                \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n                className\n            )}\n            {...props}\n        >\n            <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n                <SelectPrimitive.ItemIndicator>\n                    <CheckIcon className=\"size-4\" />\n                </SelectPrimitive.ItemIndicator>\n            </span>\n            <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n        </SelectPrimitive.Item>\n    )\n}\n\nfunction SelectSeparator({\n    className,\n    ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n    return (\n        <SelectPrimitive.Separator\n            data-slot=\"select-separator\"\n            className={cn(\n                'bg-border pointer-events-none -mx-1 my-1 h-px',\n                className\n            )}\n            {...props}\n        />\n    )\n}\n\nfunction SelectScrollUpButton({\n    className,\n    ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n    return (\n        <SelectPrimitive.ScrollUpButton\n            data-slot=\"select-scroll-up-button\"\n            className={cn(\n                'flex cursor-default items-center justify-center py-1',\n                className\n            )}\n            {...props}\n        >\n            <ChevronUpIcon className=\"size-4\" />\n        </SelectPrimitive.ScrollUpButton>\n    )\n}\n\nfunction SelectScrollDownButton({\n    className,\n    ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n    return (\n        <SelectPrimitive.ScrollDownButton\n            data-slot=\"select-scroll-down-button\"\n            className={cn(\n                'flex cursor-default items-center justify-center py-1',\n                className\n            )}\n            {...props}\n        >\n            <ChevronDownIcon className=\"size-4\" />\n        </SelectPrimitive.ScrollDownButton>\n    )\n}\n\nexport {\n    Select,\n    SelectContent,\n    SelectGroup,\n    SelectItem,\n    SelectLabel,\n    SelectScrollDownButton,\n    SelectScrollUpButton,\n    SelectSeparator,\n    SelectTrigger,\n    SelectValue,\n}\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "components/ui/switch.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n    </SwitchPrimitive.Root>\n  )\n}\n\nexport { Switch }\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}