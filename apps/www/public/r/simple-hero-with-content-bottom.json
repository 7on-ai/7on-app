{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "simple-hero-with-content-bottom",
  "type": "registry:block",
  "title": "Simple Hero with Content Bottom",
  "description": "A simple hero section with content at the bottom",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority",
    "motion"
  ],
  "registryDependencies": [
    "utils"
  ],
  "files": [
    {
      "path": "registry/default/blocks/hero-sections/simple-hero-with-content-bottom.tsx",
      "content": "import { Button } from '@/components/ui/button'\nimport { motion as m } from 'motion/react'\n\nexport default function Hero() {\n    return (\n        <section className=\"relative isolate flex min-h-[100svh] w-full flex-col items-center justify-end overflow-hidden\">\n            <div className=\"z-20 flex w-full max-w-4xl flex-col items-center justify-center gap-8 px-4 py-16 text-center\">\n                <m.div\n                    animate={{\n                        transform: 'translateY(0)',\n                        opacity: 1,\n                        filter: 'blur(0)',\n                    }}\n                    initial={{\n                        transform: 'translateY(-20px)',\n                        opacity: 0,\n                        filter: 'blur(10px)',\n                    }}\n                    transition={{\n                        duration: 0.5,\n                        delay: 0,\n                        ease: 'easeOut',\n                    }}\n                    className=\"h-1.5 w-1.5 animate-ping rounded-full bg-white\"\n                />\n\n                <m.div\n                    animate={{\n                        transform: 'translateY(0)',\n                        opacity: 1,\n                        filter: 'blur(0)',\n                    }}\n                    initial={{\n                        transform: 'translateY(15px)',\n                        opacity: 0,\n                        filter: 'blur(10px)',\n                    }}\n                    transition={{\n                        duration: 0.5,\n                        delay: 0.3,\n                        ease: 'easeOut',\n                    }}\n                    className=\"flex items-center rounded-md border border-white/20 bg-white/10 px-3 py-1.5 text-sm font-medium text-white backdrop-blur-md\"\n                >\n                    Beta has Launched\n                </m.div>\n\n                <m.h1\n                    animate={{\n                        transform: 'translateY(0)',\n                        opacity: 1,\n                        filter: 'blur(0)',\n                    }}\n                    initial={{\n                        transform: 'translateY(15px)',\n                        opacity: 0,\n                        filter: 'blur(10px)',\n                    }}\n                    transition={{\n                        duration: 0.5,\n                        delay: 0.6,\n                        ease: 'easeOut',\n                    }}\n                    className=\"text-3xl text-white md:text-4xl lg:text-5xl\"\n                >\n                    Simplicity is very{' '}\n                    <span className=\"font-bold italic\">Effective</span>\n                </m.h1>\n                <m.p\n                    animate={{\n                        transform: 'translateY(0)',\n                        opacity: 1,\n                        filter: 'blur(0)',\n                    }}\n                    initial={{\n                        transform: 'translateY(15px)',\n                        opacity: 0,\n                        filter: 'blur(10px)',\n                    }}\n                    transition={{\n                        duration: 0.5,\n                        delay: 0.9,\n                        ease: 'easeOut',\n                    }}\n                    className=\"max-w-8xl text-sm font-light text-balance text-white/80 md:text-lg\"\n                >\n                    Simplicity is living a life that is less hectic and shallow.\n                    When you understand simplicity, you begin to have an\n                    appreciation for things\n                </m.p>\n                <m.div\n                    animate={{\n                        transform: 'translateY(0)',\n                        opacity: 1,\n                        filter: 'blur(0)',\n                    }}\n                    initial={{\n                        transform: 'translateY(15px)',\n                        opacity: 0,\n                        filter: 'blur(10px)',\n                    }}\n                    transition={{\n                        duration: 0.5,\n                        delay: 1.2,\n                        ease: 'easeOut',\n                    }}\n                >\n                    <Button className=\"cursor-pointer bg-white text-black hover:scale-105 hover:bg-white\">\n                        Get Started\n                    </Button>\n                </m.div>\n            </div>\n\n            {/* Pattern overlay */}\n            <div className=\"absolute top-1/5 left-1/2 aspect-square w-[200%] -translate-x-1/2 rounded-full bg-orange-950 blur-[200px] md:top-1/3\" />\n\n            <div className=\"absolute top-1/5 left-1/2 aspect-square w-[200%] -translate-x-1/2 overflow-hidden rounded-full mask-[radial-gradient(circle,_white_10%,_transparent_73%)] md:top-1/3\">\n                <svg\n                    aria-hidden=\"true\"\n                    className=\"inset-0 z-10 size-full stroke-white/20 stroke-2\"\n                >\n                    <defs>\n                        <pattern\n                            x=\"50%\"\n                            y={-1}\n                            id=\"grid-pattern\"\n                            width={15}\n                            height={200}\n                            patternUnits=\"userSpaceOnUse\"\n                        >\n                            <path d=\"M.5 200V.5\" fill=\"none\" />\n                        </pattern>\n                    </defs>\n                    <rect\n                        fill=\"url(#grid-pattern)\"\n                        width=\"100%\"\n                        height=\"100%\"\n                        strokeWidth={0}\n                    />\n                </svg>\n            </div>\n        </section>\n    )\n}\n",
      "type": "registry:component",
      "target": "components/hero.tsx"
    },
    {
      "path": "components/ui/button.tsx",
      "content": "import * as React from 'react'\nimport { Slot } from '@radix-ui/react-slot'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { cn } from '@/lib/utils'\n\nconst buttonVariants = cva(\n    \"inline-flex items-center relative justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive group\",\n    {\n        variants: {\n            variant: {\n                default:\n                    'bg-primary text-primary-foreground shadow-xs hover:bg-primary/90',\n                destructive:\n                    'bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60',\n                outline:\n                    'border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50',\n                secondary:\n                    'bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80',\n                ghost: 'hover:bg-accent hover:text-accent-foreground',\n                link: 'text-primary underline-offset-4 hover:underline',\n                defaultWithOutline:\n                    'bg-transparent text-primary-foreground border border-border hover:border-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50 dark:text-primary-foreground before:-z-10 before:content-[\"\"] before:absolute before:top-1/2 before:left-1/2 dark:hover:border-foreground before:-translate-x-1/2 before:-translate-y-1/2 before:w-[calc(100%-6px)] before:h-[calc(100%-6px)] before:rounded-sm before:bg-primary  before:transition-colors duration-500',\n                secondaryWithOutline:\n                    'bg-transparent text-secondary-foreground border border-border hover:border-foreground dark:bg-input/30 dark:border-input dark:hover:border-primary dark:hover:bg-input/50 dark:text-secondary-foreground before:-z-10 before:content-[\"\"] before:absolute before:top-1/2 before:left-1/2 before:-translate-x-1/2 before:-translate-y-1/2 before:w-[calc(100%-6px)] before:h-[calc(100%-6px)] before:rounded-sm before:bg-secondary before:transition-colors duration-500',\n            },\n            size: {\n                default: 'h-9 px-4 py-2 has-[>svg]:px-3',\n                sm: 'h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5',\n                lg: 'h-10 rounded-md px-6 has-[>svg]:px-4',\n                xl: 'h-12 rounded-md px-8 has-[>svg]:px-6',\n                icon: 'size-9',\n                iconSm: 'size-8',\n                iconXsm: 'size-5',\n            },\n        },\n        defaultVariants: {\n            variant: 'default',\n            size: 'default',\n        },\n    }\n)\n\nfunction Button({\n    className,\n    variant,\n    size,\n    asChild = false,\n    ...props\n}: React.ComponentProps<'button'> &\n    VariantProps<typeof buttonVariants> & {\n        asChild?: boolean\n    }) {\n    const Comp = asChild ? Slot : 'button'\n\n    return (\n        <Comp\n            data-slot=\"button\"\n            className={cn(buttonVariants({ variant, size, className }))}\n            {...props}\n        />\n    )\n}\n\nexport { Button, buttonVariants }\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}