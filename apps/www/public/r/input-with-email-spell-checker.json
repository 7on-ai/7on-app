{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "input-with-email-spell-checker",
  "type": "registry:component",
  "title": "Input with Email Spell Checker",
  "description": "A component for inputting email addresses with spell checking",
  "dependencies": [
    "lucide-react",
    "@zootools/email-spell-checker",
    "use-debounce",
    "@radix-ui/react-label"
  ],
  "files": [
    {
      "path": "registry/default/components/input/input-with-email-spell-checker.tsx",
      "content": "'use client'\n\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { MailIcon } from 'lucide-react'\nimport React, { useId } from 'react'\nimport { useDebouncedCallback } from 'use-debounce'\nimport emailSpellChecker from '@zootools/email-spell-checker'\n\nexport default function InputWithEmailSpellChecker() {\n    const id = useId()\n    const [value, setValue] = React.useState<string>('')\n\n    const [suggestion, setSuggestion] = React.useState<string | null>(null)\n    const debounced = useDebouncedCallback((value) => {\n        const suggestion = emailSpellChecker.run({\n            email: value,\n        })\n\n        if (suggestion) {\n            setSuggestion(suggestion.full)\n        }\n    }, 500)\n\n    const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const inputValue = e.target.value\n        setValue(inputValue)\n        debounced(inputValue)\n    }\n\n    return (\n        <div className=\"flex w-full max-w-4/5 flex-col gap-2\">\n            <Label htmlFor={id}>Input with email spell checker</Label>\n\n            <div className=\"relative w-full\">\n                <MailIcon className=\"text-muted-foreground pointer-events-none absolute top-1/2 left-2.5 size-4 -translate-y-1/2\" />\n\n                <Input\n                    id={id}\n                    type=\"text\"\n                    className=\"ps-8\"\n                    placeholder=\"ali@gnial.com\"\n                    value={value}\n                    onChange={handleOnChange}\n                />\n            </div>\n\n            {suggestion && (\n                <p>\n                    <span className=\"text-foreground text-sm\">\n                        Did you mean{' '}\n                        <button\n                            onClick={() => {\n                                setValue(suggestion)\n                                setSuggestion(null)\n                            }}\n                            className=\"focus-visible:border-ring focus-visible:ring-ring/50 cursor-pointer font-bold transition-all outline-none hover:underline hover:underline-offset-4 focus-visible:ring-[3px]\"\n                            type=\"button\"\n                        >\n                            {suggestion}\n                        </button>\n                        ?\n                    </span>\n                </p>\n            )}\n\n            <p className=\"text-muted-foreground text-sm\">\n                Built with{' '}\n                <a\n                    href=\"https://github.com/smashsend/email-spell-checker\"\n                    target=\"_blank\"\n                    className=\"underline underline-offset-4\"\n                    rel=\"noreferrer\"\n                >\n                    @zootools/email-spell-checker\n                </a>\n            </p>\n        </div>\n    )\n}\n",
      "type": "registry:component",
      "target": "components/input-with-email-spell-checker.tsx"
    },
    {
      "path": "components/ui/input.tsx",
      "content": "import * as React from 'react'\n\nimport { cn } from '@/lib/utils'\n\nfunction Input({ className, type, ...props }: React.ComponentProps<'input'>) {\n    return (\n        <input\n            type={type}\n            data-slot=\"input\"\n            className={cn(\n                'file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n                'focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]',\n                'aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive',\n                className\n            )}\n            {...props}\n        />\n    )\n}\n\nexport { Input }\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "components/ui/label.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}