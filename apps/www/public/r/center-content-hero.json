{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "center-content-hero",
  "type": "registry:block",
  "title": "Center Content",
  "description": "A centered hero section with content",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority",
    "@radix-ui/react-popover",
    "motion"
  ],
  "registryDependencies": [
    "utils"
  ],
  "files": [
    {
      "path": "registry/default/blocks/hero-sections/center-content-hero/hero.tsx",
      "content": "'use client'\n\nimport Link from 'next/link'\nimport Header from '@/registry/default/blocks/hero-sections/center-content-hero/header'\nimport { cn } from '@/lib/utils'\nimport { buttonVariants } from '@/components/ui/button'\nimport { InteractiveGridPattern } from '@/components/ui/interactive-grid-pattern'\nimport { motion as m } from 'motion/react'\n\nconst staggerDelay = 0.4\nconst initialDelay = 0.2 // initial delay before the first element animates\nconst totalDelay = initialDelay + staggerDelay * 6 // number of elements animating\n\nexport default function Hero() {\n    const variants = {\n        hidden: () => ({\n            opacity: 0,\n            filter: 'blur(10px)',\n            transform: 'translateY(10px) scale(0.95)',\n        }),\n        visible: (custom: number) => ({\n            opacity: 1,\n            transform: 'translateY(0) scale(1)',\n            filter: 'blur(0)',\n            transition: {\n                delay: custom * staggerDelay + initialDelay,\n                duration: 0.5,\n                ease: 'easeInOut',\n            },\n        }),\n    }\n\n    return (\n        <div className=\"relative flex min-h-svh w-full flex-col items-center justify-between\">\n            <InteractiveGridPattern\n                width={100}\n                height={100}\n                squares={[80, 80]}\n                squaresClassName=\"hover:fill-muted\"\n                className=\"opacity-40 dark:opacity-30\"\n            />\n            {/* Header */}\n            <Header />\n\n            {/* Hero Section */}\n            <section className=\"container flex w-full flex-1 items-center justify-center overflow-hidden\">\n                <div className=\"relative flex flex-col items-center justify-center gap-6\">\n                    <h1 className=\"text-center text-2xl font-bold text-balance md:text-3xl lg:text-4xl xl:text-5xl\">\n                        <m.span\n                            variants={variants}\n                            custom={0}\n                            initial=\"hidden\"\n                            animate=\"visible\"\n                        >\n                            Starterkits.\n                        </m.span>{' '}\n                        <m.span\n                            variants={variants}\n                            custom={1}\n                            initial=\"hidden\"\n                            animate=\"visible\"\n                        >\n                            Components.\n                        </m.span>{' '}\n                        <m.span\n                            variants={variants}\n                            custom={2}\n                            initial=\"hidden\"\n                            animate=\"visible\"\n                        >\n                            Blocks.\n                        </m.span>\n                    </h1>\n                    <m.p\n                        variants={variants}\n                        custom={3}\n                        initial=\"hidden\"\n                        animate=\"visible\"\n                        className=\"text-muted-foreground max-w-2xl text-center text-sm font-semibold text-balance md:text-base lg:text-lg\"\n                    >\n                        \"Build faster with free{' '}\n                        <span className=\"text-foreground\">Starter kits</span>,\n                        Re-usable{' '}\n                        <span className=\"text-foreground\">Components</span>, and\n                        modular <span className=\"text-foreground\">Blocks</span>.\n                        Everything you need from{' '}\n                        <span className=\"text-foreground\">MVP</span> to\n                        <span className=\"text-foreground\">\n                            {' '}\n                            production-ready applications.\n                        </span>\n                        \"\n                    </m.p>\n                    <div className=\"flex flex-col items-center gap-2 sm:flex-row\">\n                        <m.div\n                            variants={variants}\n                            custom={4}\n                            initial=\"hidden\"\n                            animate=\"visible\"\n                            className=\"w-full sm:w-fit\"\n                        >\n                            <Link\n                                href=\"#\"\n                                className={cn(\n                                    buttonVariants({\n                                        size: 'sm',\n                                        className:\n                                            'w-full sm:h-10 sm:w-fit sm:px-6 sm:has-[>svg]:px-4',\n                                    })\n                                )}\n                            >\n                                Pro Toolkit\n                            </Link>\n                        </m.div>\n                        <m.div\n                            variants={variants}\n                            custom={5}\n                            initial=\"hidden\"\n                            animate=\"visible\"\n                            className=\"w-full sm:w-fit\"\n                        >\n                            <Link\n                                href=\"#\"\n                                className={cn(\n                                    buttonVariants({\n                                        size: 'sm',\n                                        variant: 'secondary',\n                                        className:\n                                            'w-full sm:h-10 sm:w-fit sm:px-6 sm:has-[>svg]:px-4',\n                                    })\n                                )}\n                            >\n                                Browse Free Resources\n                            </Link>\n                        </m.div>\n                    </div>\n\n                    {/* Faded Lines on content */}\n                    <FadeLine\n                        className=\"absolute -top-10 -left-1/4\"\n                        opacity={0.2}\n                        fadeWidth=\"10%\"\n                        width=\"150%\"\n                        height=\"1px\"\n                        orientation=\"horizontal\"\n                        delay={0}\n                    />\n\n                    <FadeLine\n                        className=\"absolute -bottom-10 -left-1/4\"\n                        opacity={0.2}\n                        fadeWidth=\"10%\"\n                        width=\"150%\"\n                        height=\"1px\"\n                        orientation=\"horizontal\"\n                        delay={0.1}\n                    />\n\n                    <FadeLine\n                        className=\"absolute -top-14 -left-1/4\"\n                        opacity={0.2}\n                        fadeWidth=\"10%\"\n                        width=\"150%\"\n                        height=\"1px\"\n                        orientation=\"horizontal\"\n                        delay={0.2}\n                    />\n\n                    <FadeLine\n                        className=\"absolute -bottom-14 -left-1/4\"\n                        opacity={0.2}\n                        fadeWidth=\"10%\"\n                        width=\"150%\"\n                        height=\"1px\"\n                        orientation=\"horizontal\"\n                        delay={0.3}\n                    />\n\n                    <FadeLine\n                        className=\"absolute -top-3/4 left-0 md:-left-10\"\n                        fadeWidth=\"15%\"\n                        opacity={0.2}\n                        width=\"1px\"\n                        height=\"250%\"\n                        orientation=\"vertical\"\n                        delay={0.4}\n                    />\n\n                    <FadeLine\n                        className=\"absolute -top-3/4 right-0 md:-right-10\"\n                        fadeWidth=\"15%\"\n                        opacity={0.2}\n                        width=\"1px\"\n                        height=\"250%\"\n                        orientation=\"vertical\"\n                        delay={0.5}\n                    />\n\n                    <FadeLine\n                        className=\"absolute -top-3/4 left-4 md:-left-14\"\n                        fadeWidth=\"15%\"\n                        opacity={0.2}\n                        width=\"1px\"\n                        height=\"250%\"\n                        orientation=\"vertical\"\n                        delay={0.6}\n                    />\n\n                    <FadeLine\n                        className=\"absolute -top-3/4 right-4 md:-right-14\"\n                        fadeWidth=\"15%\"\n                        opacity={0.2}\n                        width=\"1px\"\n                        height=\"250%\"\n                        orientation=\"vertical\"\n                        delay={0.7}\n                    />\n                </div>\n            </section>\n        </div>\n    )\n}\n\ninterface FadeLineProps {\n    className?: string\n    color?: string\n    fadeWidth?: string\n    orientation: 'horizontal' | 'vertical'\n    opacity?: number\n    width: string\n    height?: string\n    delay?: number\n}\n\nfunction FadeLine({\n    className = '',\n    color = 'var(--foreground)',\n    fadeWidth = '25%',\n    orientation,\n    opacity = 1,\n    width,\n    height,\n    delay = 0,\n}: FadeLineProps) {\n    const gradientDirection =\n        orientation === 'vertical' ? 'to bottom' : 'to right'\n\n    const animationProps =\n        orientation === 'vertical'\n            ? {\n                  initial: { height: 0 },\n                  animate: { height },\n                  transition: {\n                      duration: 1.5,\n                      delay: delay + totalDelay,\n                      ease: 'easeOut',\n                  },\n              }\n            : {\n                  initial: { width: 0 },\n                  animate: { width },\n                  transition: {\n                      duration: 1.5,\n                      delay: delay + totalDelay,\n                      ease: 'easeOut',\n                  },\n              }\n\n    return (\n        <m.span\n            {...animationProps}\n            className={`${className}`}\n            style={{\n                background: `linear-gradient(${gradientDirection}, transparent 0%, ${color} ${fadeWidth}, ${color} calc(100% - ${fadeWidth}), transparent 100%)`,\n                opacity,\n                width,\n                height,\n            }}\n        />\n    )\n}\n",
      "type": "registry:component",
      "target": "components/hero.tsx"
    },
    {
      "path": "registry/default/blocks/hero-sections/center-content-hero/header.tsx",
      "content": "'use client'\n\nimport { Button, buttonVariants } from '@/components/ui/button'\nimport { cn } from '@/lib/utils'\nimport Link, { LinkProps } from 'next/link'\nimport React from 'react'\nimport {\n    Popover,\n    PopoverContent,\n    PopoverTrigger,\n} from '@/components/ui/popover'\n\nconst navLinks = [\n    {\n        href: '#',\n        label: 'Features',\n    },\n    {\n        href: '#',\n        label: 'About',\n    },\n    {\n        href: '#',\n        label: 'Pricing',\n    },\n    {\n        href: '#',\n        label: 'Contact',\n    },\n    {\n        href: '#',\n        label: 'Teams',\n    },\n]\n\nexport default function Header() {\n    return (\n        <header className=\"z-20 container grid h-14 w-full grid-cols-2 gap-4 md:grid-cols-5\">\n            <div className=\"flex items-center justify-start gap-4\">\n                <MobileNav />\n                <Link\n                    href=\"#\"\n                    className=\"focus-visible:border-ring focus-visible:ring-ring/50 flex text-lg font-bold outline-none focus-visible:ring-[3px]\"\n                >\n                    Acme\n                </Link>\n            </div>\n\n            <nav className=\"col-span-3 hidden place-items-center md:grid\">\n                <ul className=\"flex items-center gap-2\">\n                    {navLinks.map((link) => (\n                        <li key={link.label} className=\"inline-block\">\n                            <Link\n                                href={link.href}\n                                className={cn(\n                                    buttonVariants({\n                                        variant: 'ghost',\n                                        size: 'sm',\n                                    })\n                                )}\n                            >\n                                {link.label}\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n            </nav>\n\n            <div className=\"flex items-center justify-end gap-2\">\n                <Link\n                    href=\"#\"\n                    className={cn(\n                        buttonVariants({ variant: 'ghost', size: 'sm' })\n                    )}\n                >\n                    Log in\n                </Link>\n                <Link href=\"#\" className={cn(buttonVariants({ size: 'sm' }))}>\n                    Sign up\n                </Link>\n            </div>\n        </header>\n    )\n}\n\nfunction MobileNav() {\n    const [open, setOpen] = React.useState(false)\n\n    return (\n        <Popover open={open} onOpenChange={setOpen}>\n            <PopoverTrigger asChild>\n                <Button\n                    variant=\"ghost\"\n                    className={cn(\n                        'extend-touch-target block h-8 touch-manipulation items-center justify-start gap-2.5 !p-0 hover:bg-transparent focus-visible:bg-transparent focus-visible:ring-0 active:bg-transparent md:hidden dark:hover:bg-transparent'\n                    )}\n                >\n                    <div className=\"relative flex h-8 w-4 items-center justify-center\">\n                        <div className=\"relative size-4\">\n                            <span\n                                className={cn(\n                                    'bg-foreground absolute left-0 block h-0.5 w-4 transition-all duration-100',\n                                    open ? 'top-[0.4rem] -rotate-45' : 'top-1'\n                                )}\n                            />\n                            <span\n                                className={cn(\n                                    'bg-foreground absolute left-0 block h-0.5 w-4 transition-all duration-100',\n                                    open ? 'top-[0.4rem] rotate-45' : 'top-2.5'\n                                )}\n                            />\n                        </div>\n                        <span className=\"sr-only\">Toggle Menu</span>\n                    </div>\n                </Button>\n            </PopoverTrigger>\n            <PopoverContent\n                className=\"bg-background/90 no-scrollbar h-(--radix-popover-content-available-height) w-(--radix-popover-content-available-width) overflow-y-auto rounded-none border-none p-0 shadow-none backdrop-blur duration-100\"\n                align=\"start\"\n                side=\"bottom\"\n                alignOffset={-16}\n                sideOffset={14}\n            >\n                <div className=\"flex flex-col gap-12 overflow-auto px-6 py-6\">\n                    <div className=\"flex flex-col gap-4\">\n                        <div className=\"text-muted-foreground text-sm font-medium\">\n                            Menu\n                        </div>\n                        <div className=\"flex flex-col gap-3\">\n                            {navLinks.map((item, index) => (\n                                <MobileLink\n                                    key={index}\n                                    href={item.href}\n                                    onOpenChange={setOpen}\n                                >\n                                    {item.label}\n                                </MobileLink>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </PopoverContent>\n        </Popover>\n    )\n}\n\nfunction MobileLink({\n    href,\n    onOpenChange,\n    className,\n    children,\n    ...props\n}: LinkProps & {\n    onOpenChange?: (open: boolean) => void\n    children: React.ReactNode\n    className?: string\n}) {\n    return (\n        <Link\n            href={href}\n            className={cn('text-2xl font-medium', className)}\n            {...props}\n        >\n            {children}\n        </Link>\n    )\n}\n",
      "type": "registry:component",
      "target": "components/header.tsx"
    },
    {
      "path": "components/ui/button.tsx",
      "content": "import * as React from 'react'\nimport { Slot } from '@radix-ui/react-slot'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { cn } from '@/lib/utils'\n\nconst buttonVariants = cva(\n    \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n    {\n        variants: {\n            variant: {\n                default:\n                    'bg-primary text-primary-foreground shadow-xs hover:bg-primary/90',\n                destructive:\n                    'bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60',\n                outline:\n                    'border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50',\n                secondary:\n                    'bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80',\n                ghost: 'hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50',\n                link: 'text-primary underline-offset-4 hover:underline',\n            },\n            size: {\n                default: 'h-9 px-4 py-2 has-[>svg]:px-3',\n                sm: 'h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5',\n                lg: 'h-10 rounded-md px-6 has-[>svg]:px-4',\n                icon: 'size-9',\n                iconSm: 'size-8',\n                iconXsm: 'size-5',\n            },\n        },\n        defaultVariants: {\n            variant: 'default',\n            size: 'default',\n        },\n    }\n)\n\nfunction Button({\n    className,\n    variant,\n    size,\n    asChild = false,\n    ...props\n}: React.ComponentProps<'button'> &\n    VariantProps<typeof buttonVariants> & {\n        asChild?: boolean\n    }) {\n    const Comp = asChild ? Slot : 'button'\n\n    return (\n        <Comp\n            data-slot=\"button\"\n            className={cn(buttonVariants({ variant, size, className }))}\n            {...props}\n        />\n    )\n}\n\nexport { Button, buttonVariants }\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "components/ui/popover.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Popover({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Root>) {\n  return <PopoverPrimitive.Root data-slot=\"popover\" {...props} />\n}\n\nfunction PopoverTrigger({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {\n  return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />\n}\n\nfunction PopoverContent({\n  className,\n  align = \"center\",\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Content>) {\n  return (\n    <PopoverPrimitive.Portal>\n      <PopoverPrimitive.Content\n        data-slot=\"popover-content\"\n        align={align}\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 origin-(--radix-popover-content-transform-origin) rounded-md border p-4 shadow-md outline-hidden\",\n          className\n        )}\n        {...props}\n      />\n    </PopoverPrimitive.Portal>\n  )\n}\n\nfunction PopoverAnchor({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Anchor>) {\n  return <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />\n}\n\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "components/ui/interactive-grid-pattern.tsx",
      "content": "'use client'\n\nimport { cn } from '@/lib/utils'\nimport React, { useState } from 'react'\n\n/**\n * InteractiveGridPattern is a component that renders a grid pattern with interactive squares.\n *\n * @param width - The width of each square.\n * @param height - The height of each square.\n * @param squares - The number of squares in the grid. The first element is the number of horizontal squares, and the second element is the number of vertical squares.\n * @param className - The class name of the grid.\n * @param squaresClassName - The class name of the squares.\n */\ninterface InteractiveGridPatternProps extends React.SVGProps<SVGSVGElement> {\n    width?: number\n    height?: number\n    squares?: [number, number] // [horizontal, vertical]\n    className?: string\n    squaresClassName?: string\n}\n\n/**\n * The InteractiveGridPattern component.\n *\n * @see InteractiveGridPatternProps for the props interface.\n * @returns A React component.\n */\nexport function InteractiveGridPattern({\n    width = 40,\n    height = 40,\n    squares = [24, 24],\n    className,\n    squaresClassName,\n    ...props\n}: InteractiveGridPatternProps) {\n    const [horizontal, vertical] = squares\n    const [hoveredSquare, setHoveredSquare] = useState<number | null>(null)\n\n    return (\n        <svg\n            width={width * horizontal}\n            height={height * vertical}\n            className={cn(\n                'border-border absolute inset-0 h-full w-full border',\n                className\n            )}\n            {...props}\n        >\n            {Array.from({ length: horizontal * vertical }).map((_, index) => {\n                const x = (index % horizontal) * width\n                const y = Math.floor(index / horizontal) * height\n                return (\n                    <rect\n                        key={index}\n                        x={x}\n                        y={y}\n                        width={width}\n                        height={height}\n                        className={cn(\n                            'stroke-border transition-all duration-100 ease-in-out [&:not(:hover)]:duration-1000',\n                            hoveredSquare === index\n                                ? 'fill-border'\n                                : 'fill-transparent',\n                            squaresClassName\n                        )}\n                        onMouseEnter={() => setHoveredSquare(index)}\n                        onMouseLeave={() => setHoveredSquare(null)}\n                    />\n                )\n            })}\n        </svg>\n    )\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}